@model DeliverLoad.Models.PresenterContentLinkViewModel

@{
    ViewBag.Title = Model.Title;
    string ReturnUrl = HttpContext.Current.Request.RawUrl;

    <script>

    </script>

    <div class="heading_message">
        <input type="hidden" value="@HttpContext.Current.Request.RawUrl" id="hdnReturnUrl" />
        <div class="wraper">
            @if (WebSecurity.IsAuthenticated)
            {
                var obj = DeliverLoad.Utils.Utils.GetDeliverLoadUser(WebSecurity.CurrentUserName);
                <div class="logo" style="float:left">
                    <img src="~/Content/images/ikeokw_transparent.jpg" style="height:50px;margin-top:5px" />
                </div>
                <a href="@Url.Action("LogOffPreview", "Channel", new { returnurl = ReturnUrl })" class="button" style="float:right">Log Out</a>
            }
            else
            {

                using (Html.BeginForm("LoginPreview", "Account", new { returnurl = ReturnUrl }, FormMethod.Post, null))
                {
                    <div class="logo">
                        <img src="~/Content/images/ikeokw_transparent.jpg" style="height:50px;margin-top:5px" />
                    </div>

                    @Html.AntiForgeryToken()
                    @Html.TextBoxFor(m => m.LoginModel.LoginUserName, new { placeholder = "Your email." })
                    @Html.TextBoxFor(m => m.LoginModel.LoginPassword, new { type = "password", placeholder = "Your Password." })

                    <input type="submit" name="Login" value="Login" id="get" />
                    if (Request.Form.AllKeys.Contains("Login"))
                    {
                        @Html.ValidationSummary()
                    }
                    <div class="forget">
                        <a class="fancybox" href="@Url.Action("ForgotPassword", "Account")">Forgot Password?</a>
                    </div>
                }

            }

        </div>
    </div>

    <div class="divopecity">
        @if (ViewBag.ChapterStatus == "false")
        {
            <center><h2><label class="label label-danger">The Chapter is temporarily unavailable!</label></h2></center>
        }
        else
        {
            <div class="wraper">
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-md-5">
                                <h3><u>@Model.Title</u></h3>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-8">
                            @if (Model.ImageName != null && Model.ImageName != "")
                            {
                                <p><img src="@Url.Content("~/UploadedImages")/@Model.ImageName" class="img-thumbnail img-responsive" /></p>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-8">
                            @if (Model.VideoName != "" && Model.VideoName != null)
                            {
                                if (Model.VideoFrom == "A")
                                {
                                    <div id="DivVideoPreview" class="embed-responsive embed-responsive-16by9">
                                        <video controls="controls" class="embed-responsive-item "><source id="VideoPreviewSource" src="@Model.VideoName" /></video>
                                    </div>
                                }
                                else
                                {
                                    <div id="DivVideoPreview" class="embed-responsive embed-responsive-16by9">
                                        <iframe class="embed-responsive-item " frameborder="0" id="IframYouTube"></iframe>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-8">
                            @Html.Raw(Model.Description)
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    if (!WebSecurity.IsAuthenticated)
    {
        <div class="heading_message">
            <div class=" wraper">
            </div>
        </div>
        <div class=" wraper">
            <div class="FixCenter">
                <div class="box1">
                    <div class="register">
                        <div class="form_wraper">
                            <div class="title">
                                <h2>Register</h2>
                            </div>
                            <p>Surf, view or get channels consisting of a series of creative works in Text, Image or Video, which others commit to providing. And while at it - get your own channel too!</p>
                            @using (Html.BeginForm("Register", "Channel", new { returnUrl = HttpContext.Current.Request.RawUrl }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                if (Request.Form.AllKeys.Contains("Register"))
                                {
                                    @Html.ValidationSummary()
                                }
                                <div class="Email">
                                    @Html.TextBoxFor(m => m.LoginModel.FirstName, new { placeholder = "First Name" })
                                </div>

                                <div class="city">
                                    @Html.TextBoxFor(m => m.LoginModel.LastName, new { placeholder = "Last Name" })
                                </div>
                                <div class="city">
                                    @Html.TextBoxFor(m => m.LoginModel.UserName, new { placeholder = "Email Address" })
                                </div>
                                <div class="city">
                                    @Html.TextBoxFor(m => m.LoginModel.Password, new { type = "password", placeholder = "Your Password." })
                                    @Html.ValidationMessageFor(m => m.LoginModel.Password)
                                </div>
                                <div class="submit_button">
                                    <input type="submit" name="Register" value="Register" id="btnRegister" />
                                    <img src="~/Images/ajax-loader.gif" class="AjaxLoaderRegister" style="display:none" />
                                </div>
                            }
                            @*@Html.Partial("_Register")*@

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <style>
            .divopecity {
                opacity: 0.5;
                pointer-events: none;
            }
        </style>
    }
}
<script type="text/javascript">
    $(document).ready(function () {

        var VideoType = '@Model.VideoFrom'
        if (VideoType != '' && VideoType != null) {
            if (VideoType == 'Y') {
                youtube_parser();
            }
        }
    })
    function youtube_parser() {
        var url = '@Model.VideoName';
        var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
        var match = url.match(regExp);
        if (match && match[7].length == 11) {
            path = "http://www.youtube.com/embed/" + match[7];
            $('#IframYouTube').attr('src', path);
        }
    }


</script>
<style>
    @@media screen and (min-width: 0px) and (max-width: 485px) {
        .FixCenter {
            margin: auto;
            position: absolute;
            top: 55%;
            left: 0;
            bottom: 0;
            right: 0;
        }
    }

    @@media screen and (min-width: 485px) and (max-width: 650px) {
        .FixCenter {
            margin: auto;
            position: absolute;
            top: 35%;
            left: 0;
            bottom: 0;
            right: 0;
        }
    }

    @@media screen and (min-width: 650px) and (max-width: 2000px) {
        .FixCenter {
            margin: auto;
            position: absolute;
            top: 15%;
            left: 0;
            bottom: 0;
            right: 0;
        }
    }

    .MaxSize {
        width: 100%;
        height: 100%;
        z-index: 10;
    }

    .heading_message .button {
        border-radius: 20px;
        padding: 8px;
        border: none;
        cursor: pointer;
        vertical-align: top;
        margin: 10px 5px;
        font-weight: bold;
        font-size: 14px;
        color: #fff;
        background: #B8452E;
        min-width: 80px;
    }
</style>
